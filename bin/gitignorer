#!/usr/bin/env ruby
STDOUT.sync = true

$:.unshift File.join(File.dirname(__FILE__), *%w{ .. lib })

require 'commander/import'
require 'gitignorer'

program :name, 'gitignorer'
program :version, Gitignorer::VERSION
program :description, 'Only the best way to generate gitignores.'

default_command :help

command :create do |c|
  c.syntax = 'gitignorer create [templates]'
  c.description = 'Generate .gitignore containing provided templates.'
  c.example 'Generate .gitignore containing Java and Maven templates',
            'gitignore create Java Maven'
  c.option '--destination', 'Where to save the file (defaults to .gitignore)'
  c.option '--force', 'Force gitignore creation even if destination already
                       exists'
  c.action do |args, options|
    Gitignorer::Commands::Create.process(args, options.__hash__)
  end
end

command :list do |c|
  c.syntax = 'gitignorer list'
  c.description = 'List all available templates.'
  c.example 'List dem templates.',
            'gitignore list'
  c.action do |args, options|
    Gitignorer::Commands::List.process(options.__hash__)
  end
end

